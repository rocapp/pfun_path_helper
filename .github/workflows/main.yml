name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry run pip install tox
          poetry install

      - name: Run tests
        run: poetry run tox

      - name: Get version
        run: |
          VERSION=$(poetry version | awk '{print $NF}')
          echo "Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Check if tag exists
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
        id: check_tag

      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
          TAG_EXISTS: ${{ steps.check_tag.outputs.tag_exists }} != 'true'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Changes in this release:
            - ...
          draft: false

      - name: Publish release
        if: success()
        run: |
            poetry config pypi-token.pypi ""
            poetry publish --build
